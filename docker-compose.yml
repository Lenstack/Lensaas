version: "3.8"
services:
  ### ===================
  ### MICROSERVICE
  ### ===================
  authentication_microservice:
    build: microservices/authentication
    container_name: microservice_authentication
    ports:
      - "5000:5000"
    networks:
      - authentication_network
    depends_on:
      - postgres
      - redis
      - zookeeper
      - kafka
      - kouncil
    env_file:
      - microservices/authentication/.env
  ### ===================
  ### REDIS SERVICE
  ### ===================
  redis:
    image: redis/redis-stack-server:latest
    container_name: redis_server
    ports:
      - "6379:6379"
    networks:
      - authentication_network
    environment:
      - REDIS_PASSWORD=redis
      - REDIS_PORT=6379
      - REDIS_HOST=redis_server
  ### ===================
  ### POSTGRES SERVICE
  ### ===================
  postgres:
    image: postgres:latest
    restart: always
    container_name: postgres_server
    ports:
      - "5432:5432"
    networks:
      - authentication_network
    environment:
      - POSTGRES_HOST=postgres_server
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=authentication
    volumes:
      - postgres_data:/var/lib/postgresql/data
  ### ========================
  ### ZOOKEEPER SERVICE
  ### ========================
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper_server
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "22181:2181"
    networks:
      - authentication_network
  ### ========================
  ### KAFKA BROKER SERVICE
  ### ========================
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka_broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
    networks:
      - authentication_network
  kouncil:
    image: consdata/kouncil:latest
    container_name: kouncil_ui
    depends_on:
      - kafka
    ports:
      - "80:8080"
    environment:
      bootstrapServers: kafka:9092
    networks:
      - authentication_network
  ### ========================
  ### VOLUMES PERSISTENT DATA
  ### ========================
volumes:
  postgres_data:
  ### ===================================
  ### NETWORKS GROUP FOR ONE SAME SERVICE
  ### ===================================
networks:
  authentication_network:
    driver: bridge